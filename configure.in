dnl Process this file with autoconf to produce a configure script.

dnl =====================================================================
dnl initialization
dnl =====================================================================

AC_INIT(src/Edges/Mesh.h)
AM_INIT_AUTOMAKE(Edges, 0.1)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

dnl =====================================================================
dnl Checks for programs.
dnl =====================================================================

AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_RANLIB

dnl =====================================================================
dnl Checks for X
dnl =====================================================================

AC_PATH_X

if test "x$x_includes" != "x"; then X_CFLAGS=-I$x_includes; fi
if test "x$x_libraries" != "x"; then X_LDFLAGS=-L$x_libraries; fi

dnl =====================================================================
dnl Checks for OpenGL
dnl =====================================================================

gl_includes=""
gl_libraries=""
AC_ARG_WITH(gl-includes,
	[  --with-gl-includes		where the OpenGL includes are. ],
	[  gl_includes="$withval" ])
AC_ARG_WITH(gl-libraries,
	[  --with-gl-libraries		where the OpenGL libraries are. ],
	[  gl_libraries="$withval" ])
if test "x$gl_includes" != "x"; then GL_CFLAGS=-I$gl_includes; fi
if test "x$gl_libraries" != "x"; then GL_LDFLAGS=-L$gl_libraries; fi

ac_save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$GL_CFLAGS $X_CFLAGS $CPPFLAGS"
AC_CHECK_HEADER(GL/gl.h,,AC_MSG_ERROR("GL/gl.h header not found."))
AC_CHECK_HEADER(GL/glu.h,,AC_MSG_ERROR("GL/glu.h header not found."))
CPPFLAGS="$ac_save_CPPFLAGS"

ac_save_LDFLAGS="$LDFLAGS"
ac_save_LIBS="$LIBS"
LDFLAGS="$X_LDFLAGS $GL_LDFLAGS $ac_save_LDFLAGS"
LIBS="$ac_save_LIBS -lGL"
AC_MSG_CHECKING([for GL library])
AC_TRY_LINK(, glBegin(), have_GL=yes, have_GL=no)
AC_MSG_RESULT([$have_GL])

if test "x$have_GL" = "xno" ; then
	dnl Try with -lpthread

	AC_MSG_CHECKING([for GL library (with pthread)])
	LIBS="$ac_save_LIBS -lpthread -lGL"
	AC_TRY_LINK(, glBegin(), have_GL=yes, have_GL=no)
	AC_MSG_RESULT([$have_GL])

	if test "x$have_GL" = "xyes" ; then
		GL_LDFLAGS="$GL_LDFLAGS -lpthread"
	else
		AC_MSG_ERROR("GL library not found.")
	fi
fi
AC_CHECK_LIB(GLU, gluPerspective, echo > /dev/null, AC_MSG_ERROR("GLU library not found."), -lGL)
LDFLAGS="$ac_save_LDFLAGS"
LIBS="$ac_save_LIBS"

dnl =====================================================================
dnl Checks for Tcl
dnl =====================================================================

tcl_inclues=""
tcl_libraries=""
AC_ARG_WITH(tcl-includes,
	[  --with-tcl-includes		where the Tcl includes are. ],
	[  tcl_includes="$withval" ])
AC_ARG_WITH(tcl-libraries,
	[  --with-tcl-libraries		where the Tcl libraries are. ],
	[  tcl_libraries="$withval" ])
if test "x$tcl_includes" != "x"; then TCL_CFLAGS=-I$tcl_includes; fi
if test "x$tcl_libraries" != "x"; then TCL_LDFLAGS=-L$tcl_libraries; fi

ac_save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$TCL_CFLAGS $CPPFLAGS"
AC_CHECK_HEADER(tcl.h,,AC_MSG_ERROR("tcl.h header not found."))
CPPFLAGS="$ac_save_CPPFLAGS"

ac_save_LDFLAGS="$LDFLAGS"
LDFLAGS="$TCL_LDFLAGS $LDFLAGS"
AC_CHECK_LIB(tcl8.3, Tcl_Free, TCL_LIBS=-ltcl8.3,
AC_CHECK_LIB(tcl8.2, Tcl_Free, TCL_LIBS=-ltcl8.2,
AC_CHECK_LIB(tcl8.1, Tcl_Free, TCL_LIBS=-ltcl8.1,
AC_CHECK_LIB(tcl8.0, Tcl_Free, TCL_LIBS=-ltcl8.0, AC_MSG_ERROR("Tcl library not found.")))))
LDFLAGS="$ac_save_LDFLAGS"

dnl =====================================================================
dnl Checks for Tk
dnl =====================================================================

tk_inclues=""
tk_libraries=""
AC_ARG_WITH(tk-includes,
	[  --with-tk-includes		where the Tk includes are. ],
	[  tk_includes="$withval" ])
AC_ARG_WITH(tk-libraries,
	[  --with-tk-libraries		where the Tk libraries are. ],
	[  tk_libraries="$withval" ])
if test "x$tk_includes" != "x"; then TK_CFLAGS=-I$tk_includes; fi
if test "x$tk_libraries" != "x"; then TK_LDFLAGS=-L$tk_libraries; fi

ac_save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$TK_CFLAGS $TCL_CFLAGS $X_CFLAGS $CPPFLAGS"
AC_CHECK_HEADER(tk.h,,AC_MSG_ERROR("tk.h header not found."))
CPPFLAGS="$ac_save_CPPFLAGS"

ac_save_LDFLAGS="$LDFLAGS"
ac_save_LIBS="$LIBS"
LDFLAGS="$TK_LDFLAGS $TCL_LDFLAGS $X_LDFLAGS $LDFLAGS"
LIBS="$TCL_LIBS $LIBS"
AC_CHECK_LIB(tk8.3, Tk_Init, TK_LIBS=-ltk8.3,
AC_CHECK_LIB(tk8.2, Tk_Init, TK_LIBS=-ltk8.2,
AC_CHECK_LIB(tk8.1, Tk_Init, TK_LIBS=-ltk8.1,
AC_CHECK_LIB(tk8.0, Tk_Init, TK_LIBS=-ltk8.0, AC_MSG_ERROR("Tk library not found.")))))
LIBS="$ac_save_LIBS"
LDFLAGS="$ac_save_LDFLAGS"

LIBS=""

dnl =====================================================================
dnl compile and link flags substs
dnl =====================================================================

AC_SUBST(X_CFLAGS)
AC_SUBST(X_LDFLAGS)
AC_SUBST(GL_CFLAGS)
AC_SUBST(GL_LDFLAGS)
AC_SUBST(TCL_CFLAGS)
AC_SUBST(TCL_LDFLAGS)
AC_SUBST(TCL_LIBS)
AC_SUBST(TK_CFLAGS)
AC_SUBST(TK_LDFLAGS)
AC_SUBST(TK_LIBS)

dnl =====================================================================
dnl generate makefiles
dnl =====================================================================

AC_OUTPUT(
	Makefile

	src/Makefile
	src/Utilities/Makefile
	src/Edges/Makefile
	src/Geom/Makefile
	src/TriStrip/Makefile
	src/togl/Makefile
	src/silhouette/Makefile
	)
